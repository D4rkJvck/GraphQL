#!/bin/bash

desired_branch="main"
username="your_username"
email="your_email"

log() {
    echo -e "\n$1"
    sleep 2
}

# Check if there is already a username and email in configuration...
# If no username or email if found, it will config it...
check_credentials() {
    log "Checking credentials..."

    if ! git config --get user.name || ! git config --get user.email; then
        log "No Credentials found!!!"
        log "Configuring credentials..."

        git config user.name "$username"
        git config user.email "$email"
    fi

    log "Credentials have been configured successfully!"
}

# Check if we are in the desired branch before adding files...
# Exit the program is we're in a different branch to prevent confusion...
check_branch() {
    log "Checking branch..."
    git branch -a

    if [ "$(git rev-parse --abbrev-ref HEAD)" != "$desired_branch" ]; then
        log "[WARNING] Not on branch $desired_branch..."
        log "Please restart...\n"
        exit 1
    fi

    log "You're in the desired branch!"
}

# Add the files given as arguments...
# If there is no arguments, it adds all files...
add_files() {
    log "\nAdding files..."

    if [ $# -eq 0 ]; then
        log "No Files specified..."
        log "Adding all changes...\n"
        git add .
    else
        log "\nAdding Specified files..."
        for file in "$@"; do
            git add "$file"
            log "Added: $file\n"
        done
    fi

    log "Files added successfully!"
}

# Prompt the user for a commit message...
# Then commit the changes...
# Then push the changes...
commit_and_push() {
    log "Time to push changes..."

    git status
    read -r -p "Enter Commit Message: " commit_message
    git commit -a -m "$commit_message"
    git push origin "$desired_branch"

    log "Well done!"
}

# Adds files, then commits with a autogenerated message, then pushes...
# All in a defined time interval...
# Not used, needs further investigations...
auto_push() {
    i=1
    # Continuous process...
    while true; do
        if [[ -n $(git status -s) ]]; then
            add_files "$@"
            # View new added files...
            log "Status:\n"
            git status
            # Generate commit message...
            git commit -a -m "Auto Commit - $i"
            git push origin master
            # Increment commit counter...
            i=$((i + 1))
        fi
        sleep 1200
    done
}

#_________________________________________________________________________
#

main() {
    check_credentials
    check_branch
    add_files "$@"
    commit_and_push
    # auto_push
}

main "$@"